{"version":3,"sources":["components/showHeroes.js","components/addHero.js","App.js","reportWebVitals.js","index.js"],"names":["ShowHeroes","props","Row","heroesCollection","map","element","Col","Card","body","color","className","CardTitle","tag","name","CardSubtitle","team","e","CardText","mission","description","type","superpower","level","year","planet","AddHero","Form","FormGroup","Label","for","Input","id","placeholder","Button","onClick","toggle","newHero","document","getElementById","value","code","Math","random","newHeroesCollection","push","addHero","updateStates","App","useState","setToggle","heroes","setHeroes","ButtonToggle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a2cb7cb5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Card, CardSubtitle, CardTitle, CardText, Row, Col } from \"reactstrap\";\r\n\r\nconst ShowHeroes = (props) => {\r\n  return (\r\n    <Row>\r\n      {props.heroesCollection.map((element) => {\r\n        return (\r\n          <Col>\r\n            <Card body color=\"success\" className=\"card-height\">\r\n              <CardTitle tag=\"h5\">{element.name}</CardTitle>\r\n              <CardSubtitle tag=\"h6\" className=\"mb-2\">\r\n                Team:\r\n                {element.team === \" \"\r\n                  ? \"This hero works alone\"\r\n                  : element.team.map((e) => <div key=\"{e.name}\">{e.name}</div>)}\r\n              </CardSubtitle>\r\n              <CardText>\r\n                Missions:\r\n                {element.mission.map((e) => (\r\n                  <div key=\"{e.code}\">\r\n                    {e.description + \" is a type: \" + e.type}\r\n                  </div>\r\n                ))}\r\n              </CardText>\r\n              <CardText>\r\n                SuperPowers:\r\n                {element.superpower.map((e) => (\r\n                  <div key=\"{e.code}\">\r\n                    {e.description + \" with level: \" + e.level}\r\n                  </div>\r\n                ))}\r\n              </CardText>\r\n              Age:\r\n              <CardText>{element.year}</CardText>\r\n              Planet:\r\n              <CardText>\r\n                {element.planet === null ? \"Earth\" : element.planet}\r\n              </CardText>\r\n            </Card>\r\n          </Col>\r\n        );\r\n      })}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ShowHeroes;\r\n","import { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\r\nimport { Card } from \"reactstrap\";\r\n\r\nconst AddHero = (props) => {\r\n  const updateStates = () => {\r\n    props.toggle(false);\r\n    let name = document.getElementById(\"name\").value;\r\n    let age = document.getElementById(\"age\").value;\r\n    let planet = document.getElementById(\"planet\").value;\r\n    let mission = {\r\n      code: 1,\r\n      description: document.getElementById(\"mission\").value,\r\n      type: document.getElementById(\"mission-type\").value,\r\n    };\r\n    let superpower = {\r\n      code: 2,\r\n      description: document.getElementById(\"power\").value,\r\n      level: document.getElementById(\"level\").value,\r\n    };\r\n    let team = {\r\n      id: Math.random(),\r\n      name: document.getElementById(\"team\").value,\r\n    };\r\n    let newHero = {\r\n      name: name,\r\n      year: age,\r\n      planet: planet,\r\n      mission: [mission],\r\n      superpower: [superpower],\r\n      team: [team],\r\n    };\r\n\r\n    let newHeroesCollection = props.heroesCollection;\r\n    newHeroesCollection.push(newHero);\r\n    props.addHero(newHeroesCollection);\r\n  };\r\n\r\n  return (\r\n    <Card body>\r\n      <Form>\r\n        <FormGroup>\r\n          <Label for=\"name\">Name</Label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            placeholder=\"A new hero's name\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"team\">Team</Label>\r\n          <Input type=\"select\" name=\"team\" id=\"team\">\r\n            <option>Space Guardians</option>\r\n            <option>Earth Protectors</option>\r\n            <option>Power Girls</option>\r\n            <option>None</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"mission\">Mission</Label>\r\n          <Input type=\"select\" name=\"mission\" id=\"mission\">\r\n            <option>Put out fire</option>\r\n            <option>Save the day</option>\r\n            <option>Save a civilization</option>\r\n            <option>Save the world</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"mission-type\">Mission type</Label>\r\n          <Input type=\"select\" name=\"mission-type\" id=\"mission-type\">\r\n            <option>MR</option>\r\n            <option>MSU</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"power\">Super Power</Label>\r\n          <Input type=\"select\" name=\"power\" id=\"power\">\r\n            <option>Super speed</option>\r\n            <option>Super strenght</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"level\">Power level</Label>\r\n          <Input\r\n            type=\"integer\"\r\n            name=\"level\"\r\n            id=\"level\"\r\n            placeholder=\"Hero's power level\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"age\">Age</Label>\r\n          <Input\r\n            type=\"integer\"\r\n            name=\"age\"\r\n            id=\"age\"\r\n            placeholder=\"How old is your hero?\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"planet\">Planet</Label>\r\n          <Input\r\n            type=\"integer\"\r\n            name=\"planet\"\r\n            id=\"planet\"\r\n            placeholder=\"Which planet is your hero from?\"\r\n          />\r\n        </FormGroup>\r\n\r\n        <Button color=\"info\" onClick={() => updateStates()}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddHero;\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport ShowHeroes from \"./components/showHeroes\";\nimport { ButtonToggle } from \"reactstrap\";\nimport AddHero from \"./components/addHero\";\nimport heroes from \"./model/heros.json\";\n\nfunction App() {\n  const [toggle, setToggle] = useState(false);\n  const [heroesCollection, setHeroes] = useState(heroes);\n  return (\n    <div>\n      <ButtonToggle color=\"info\" onClick={() => setToggle(true)}>\n        {\" \"}\n        Add a hero\n      </ButtonToggle>\n      {toggle ? (\n        <AddHero\n          toggle={setToggle}\n          addHero={setHeroes}\n          heroesCollection={heroesCollection}\n        />\n      ) : (\n        <ShowHeroes heroesCollection={heroesCollection} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}